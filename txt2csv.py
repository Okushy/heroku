# -*- coding:utf-8 -*-from bottle import route, run, template, redirect, request, static_fileimport sqlite3, os, sys, re@route("/")def index():    return template("index")@route("/upload", method="POST")def upload():    data = request.files.data    name, ext = os.path.splitext(data.filename)    #file check    if ext not in ('.txt'):        return template("index", msg="Upload .txt file")        data.save("./tmp",overwrite=True)        print("Hello")    lines = [line.rstrip('\n') for line in open('./tmp/' + data.filename)]    convert_txt_csv(data.filename, lines)    print("Bye")    return '''    <h1>txt→csvファイル変換アプリ</h1>    <p>これはtxtファイルをアップロードするとcsvファイルにしてくれるアプリです。</p>        <h2>csvファイルをダウンロードしてください。</h2>    <form action="/download/'''+ data.filename + '''" method="get">    <input value="download" type="submit" />    </form>    '''    @route("/download/<file_path:path>", method="GET")def download(file_path):    return static_file(file_path + ".csv", root='./tmp', download=True)characters = ["ペンギン","パンダ","上司"]def convert_txt_csv(filename, lines):    f = open("./tmp/" + filename + '.csv', 'w')        #make 1st line    header_columns = []    header_columns.append("id")    header_columns.append("text")    header_columns.append("title")    header_columns.append("subtitle")    header_columns.append("penguin")    header_columns.append("panda")    header_columns.append("joushi")    dict = {}    for character in characters:        dict[character] = "FALSE"    f.write(",".join(header_columns) + "\n")        #make 2nd~ line    id = 0    for line_index, line in enumerate(lines):        if line == "":            continue        else:            columns = []            columns.append(str(id))            id += 1                        #convert subtitle            if line.find("##") != -1:                columns.append(line)                columns.append("FALSE")                columns.append("TRUE")                for index,character in enumerate(characters):                    columns.append("FALSE")                    dict[characters[index]] = "FALSE"                f.write(",".join(columns) + "\n")                continue                                #convert title            elif line.find("#") != -1:                columns.append(line)                columns.append("TRUE")                columns.append("FALSE")                for index,character in enumerate(characters):                    columns.append("FALSE")                    dict[characters[index]] = "FALSE"                f.write(",".join(columns) + "\n")                continue                            elif line.find("（") != -1 and line.find("）") != -1:                continue            else:                for index,character in enumerate(characters):                    if line.find(character) == 0:                        words = re.split(" +", line)                        columns.append(words[1])                        columns.append("FALSE")                        columns.append("FALSE")                        for key, value in dict.items():                            if key == character:                                dict[key] = "TRUE"                                columns.append("TRUE")                            else:                                dict[key] = "FALSE"                                columns.append("FALSE")                                                f.write(",".join(columns) + "\n")                        break                else:                    words = re.split(" +", line)                    columns.append(words[1])                    columns.append("FALSE")                    columns.append("FALSE")                    for value in dict.values():                        columns.append(value)                    f.write(",".join(columns) + "\n")                    continue# run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))run(host="localhost", port=8080, debug=True)